<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      lang="en"
      metal:use-macro="context/main_template/macros/master"
      i18n:domain="plone">
<head>
    <metal:block metal:fill-slot="head_slot">
    <!-- XXX FIX XXX -->
    
        <link rel="alternate" title="RSS 1.0" type="application/rss+xml"
              tal:define="here_url context/@@plone_context_state/object_url"
              tal:condition="request/SearchableText|nothing"
              tal:attributes="href string:$here_url/search_rss?${request/QUERY_STRING}"/>
<style type="text/css">
.queryindex, .addIndex {
    display: block;
    width: 200px;
    float: left;
    margin-right: 0.5em;
}
.queryoperator, .addOperator {
    display: block;
    width: 150px;
    float: left;
    margin-right: 0.5em;
}
.queryresults {
    float: right;
}
.previewSearchResultsHeading {
    margin-top: 1em;
}
#advancedsearch .field {
    margin: 0 1em 0.5em 0;
}
.removecriteria {
    border: 0;
    padding: 0;
    background: transparent;
    cursor: pointer;
}
.querywidget dt {
    border: 1px solid #8CACBB;
    cursor: pointer;
}
.arrowDownAlternative {
    float: right;
    padding-right: 0.25em;
}
.widgetPulldownMenu {
    position: absolute;
}
.multipleSelectionWidget dd {
    width: 200px;
    border: 1px solid #8CACBB;
    background: white;
    overflow:auto; 
    height:6.5em;
}
.multipleSelectionWidget label {
    display: block;
}
.querywidget {
    float: left;
    width: 200px;
    border-width: 1px;
}
.referenceWidget input {
    width: 200px;
}
dl.querywidget {
    margin: 0;
}
#content dl.querywidget dd,
dl.querywidget dd {
    margin: 0;
}
.dateRangeWidget input {
    width: 80px;
}
div.dateRangeWidget, dl.multipleSelectionWidget {
    border: solid 1px transparent;
}
</style>
<script type="text/javascript">
jQuery(function($) {

    // Search config
    var plone_app_search_config = {};

    // Create a select menu
    function CreateSelect(values, selectedvalue, class, name) {
        // Create select
        var select = $(document.createElement('select'))
                            .addClass(class)
                            .attr('name', name)
        $.each(values, function (i, val) {
            var option = $(document.createElement('option'))
                            .attr('value', i)
                            .html(val.friendly_name)
            if (i == selectedvalue) {
                option.attr('selected', 'selected');
            }
            select.append(option);
        });
        return select;
    }

    // Create a queryindex select menu
    function CreateQueryIndex(value) {
        return CreateSelect(plone_app_search_config.indexes,
                            value,
                            'queryindex',
                            'query.i:records');
    }

    // Create a queryoperator select menu
    function CreateQueryOperator(index, value) {
        return CreateSelect(plone_app_search_config.indexes[index].operators,
                            value,
                            'queryoperator',
                            'query.o:records');
    }

    function CreateWidget(type, index) {
        switch (type) {
            case 'StringWidget':
                return $(document.createElement('input'))
                    .attr({
                        'autocomplete': 'off',
                        'type': 'text',
                        'name': 'query.v:records'
                    })
                    .addClass('querywidget queryvalue stringWidget');
                break;
            case 'DateWidget':
                return $(document.createElement('input'))
                    .attr({
                        'autocomplete': 'off',
                        'type': 'text',
                        'name': 'query.v:records'
                    })
                    .addClass('querywidget queryvalue dateWidget');
                break;
            case 'DateRangeWidget':
                return $(document.createElement('div'))
                    .addClass('querywidget dateRangeWidget')
                    .append($(document.createElement('input'))
                        .attr({
                            'autocomplete': 'off',
                            'type': 'text',
                            'name': 'query.v:records:list'
                        })
                        .addClass('queryvalue')
                    )
                    .append($(document.createElement('span'))
                        .html(' and ')
                    )
                    .append($(document.createElement('input'))
                        .attr({
                            'autocomplete': 'off',
                            'type': 'text',
                            'name': 'query.v:records:list'
                        })
                        .addClass('queryvalue')
                    )
                break;
            case 'ReferenceWidget':
                return $(document.createElement('dl'))
                    .addClass('querywidget referenceWidget')
                    .append($(document.createElement('dt'))
                        .html('Select...')
                        .addClass('hiddenStructure')
                    )
                    .append($(document.createElement('dd'))
                        .append($(document.createElement('input'))
                            .attr({
                                'autocomplete': 'off',
                                'type': 'text',
                                'name': 'query.v:records'
                            })
                            .addClass('queryvalue')
                        )
                    )
                break;
            case 'RelativePathWidget':
                return $(document.createElement('input'))
                    .attr({
                        'autocomplete': 'off',
                        'type': 'text',
                        'name': 'query.v:records'
                    })
                    .addClass('querywidget queryvalue relativePathWidget');
                break;
            case 'MultipleSelectionWidget':
                var dl = $(document.createElement('dl'))
                    .addClass('querywidget multipleSelectionWidget')
                    .append($(document.createElement('dt'))
                        .append($(document.createElement('span'))
                            .html('Select...')
                        )
                        .append($(document.createElement('span'))
                            .addClass('arrowDownAlternative')
                            .html('â–¼')
                        )
                    )
                var dd = $(document.createElement('dd')).addClass('hiddenStructure')
                $.each(plone_app_search_config.indexes[index].values, function (i, val) {
                    dd.append($(document.createElement('label'))
                        .append($(document.createElement('input'))
                            .attr({
                                'type': 'checkbox',
                                'name': 'query.v:records:list',
                                'value': i
                            })
                        )
                        .append($(document.createElement('span'))
                            .html(val.friendly_name)
                        )
                    )
                });
                dl.append(dd);
                return dl;
                break;
        }
    }

    // Enhance for javascript browsers
    $(document).ready(function () {

        // Hide controls used for non-javascript only
        $(".addIndexButton").hide();
        $(".multipleSelectionWidget dt").removeClass('hiddenStructure');
        $(".multipleSelectionWidget dd").addClass('hiddenStructure widgetPulldownMenu');

        $.getJSON('querybuilderjsonconfig', function (data) {
            plone_app_search_config = data;
            $('div.queryindex').each(function () {
                $(this).before(
                    $(document.createElement('div'))
                        .addClass('queryresults discreet')
                        .html('')
                )
                $(this).replaceWith(CreateQueryIndex($(this).children('input').val()));
            });
            $('div.queryoperator').each(function () {
                $(this).replaceWith(CreateQueryOperator($(this).parents('.field').children('.queryindex').val(),
                                                        $(this).children('input').val()));
            });
            UpdateSearch();
        });
    });

    function GetCurrentWidget (node) {
        var classes = node.attr('class').split(' ');
        for (i in classes) {
            if (classes[i].indexOf('Widget') != -1) {
                var classname = classes[i];
                return classname.slice(0,1).toUpperCase() + classname.slice(1);
            }
        }
    }

    $('.multipleSelectionWidget dt').live('click', function () {
        if ($(this).parent().children('dd').hasClass('hiddenStructure')) {
            $(this).parent().children('dd').removeClass('hiddenStructure');
        } else {
            $(this).parent().children('dd').addClass('hiddenStructure');
        }
    });

    $('.queryindex').live('change', function () {
        var index = $(this).children(':selected')[0].value;
        $(this).parent().children('.queryoperator')
            .replaceWith(CreateQueryOperator(index, ''));
        var operatorvalue = $(this).parents('.field').children('.queryoperator').val();
        var widget = plone_app_search_config.indexes[index].operators[operatorvalue].widget;
        var querywidget = $(this).parent().children('.querywidget');
        if ((widget != GetCurrentWidget(querywidget)) || (widget == 'MultipleSelectionWidget')) {
            querywidget.replaceWith(CreateWidget(widget, index));
        }
        UpdateSearch();
    });

    $('.queryoperator').live('change', function () {
        var index = $(this).parents('.field').children('.queryindex').val();
        var operatorvalue = $(this).children(':selected')[0].value;
        var widget = plone_app_search_config.indexes[index].operators[operatorvalue].widget;
        var querywidget = $(this).parent().children('.querywidget');
        if (widget != GetCurrentWidget(querywidget)) {
            querywidget.replaceWith(CreateWidget(widget, index));
        }
        UpdateSearch();
    });

    $('#sort_on,#sort_order,.multipleSelectionWidget input').live('change', function () {
        UpdateSearch();
    });

    $('.queryvalue').live('keyup', function () {
        UpdateSearch();
    });
    $('.queryvalue').live('keydown', function (e) {
        if (e.keyCode == 13) {
            return false;
        }
    });

    $('.addIndex').live('change', function () {
        var index = $(this).children(':selected')[0].value;
        var field = $(this).parents('.field');
        var newfield = $(document.createElement('div'))
                            .addClass('field');

        newfield.append(
                $(document.createElement('div'))
                    .addClass('queryresults discreet')
                    .html('')
            )
        newfield.append(CreateQueryIndex(index));
        var operator = CreateQueryOperator(index,'');
        newfield.append(operator);
        var operatorvalue = $(operator.children()[0]).attr('value');
        newfield.append(CreateWidget(plone_app_search_config.indexes[index].operators[operatorvalue].widget, index));
        newfield.append(
            $(document.createElement('input'))
                .attr({
                    'value': 'Remove criterion',
                    'type': 'submit',
                    'name': 'removecriteria'
                })
                .addClass('removecriteria discreet')
        )
        field.before(newfield);
        $(this).val('');
        UpdateSearch();
    });

    $('.removecriteria').live('click', function () {
        $(this).parents('.field').remove();
        UpdateSearch();
        return false;
    });

    function UpdateSearch() {
        var query = "querybuilderpreviewresults?";
        var querylist  = [];
        $('#advancedsearch .queryindex').each(function () {
            var results = $(this).parents('.field').children('.queryresults');
            var index = $(this).val();
            var operator = $(this).parents('.field').children('.queryoperator').val();
            var widget = plone_app_search_config.indexes[index].operators[operator].widget;
            querylist.push('query.i:records=' + index);
            querylist.push('query.o:records=' + operator);
            switch (widget) {
                case 'DateRangeWidget':
                    var querywidget = $(this).parents('.field').find('.querywidget');
                    querylist.push('query.v:records:list=' + $(querywidget.children('input')[0]).val());
                    querylist.push('query.v:records:list=' + $(querywidget.children('input')[1]).val());
                    break;
                case 'MultipleSelectionWidget':
                    var querywidget = $(this).parents('.field').find('.querywidget');
                    querywidget.find('input:checked').each(function () {
                        querylist.push('query.v:records:list=' + $(this).val());
                    });
                    break;
                default:
                    querylist.push('query.v:records=' + $(this).parents('.field').find('.queryvalue').val());
                    break;
            }

            $.get('querybuildernumberofresults?' + querylist.join('&'),
                  {},
                  function (data) { results.html(data); });
        });
        query += querylist.join('&');
        query += '&sort_on=' + $('#sort_on').val();
        if ($('#sort_order:checked').length > 0) {
            query += '&sort_order=reverse'
        }
        $.get(query, {}, function (data) { $('#searchresults').html(data); });
    }
}(jQuery))
</script>
    </metal:block>

</head>

<body>
<div metal:fill-slot="main" tal:define="config python:view.getConfig();
                                        indexes config/indexes;
                                        sortable_indexes config/sortable_indexes;
                                        addindexselected python:request.has_key('addindex') and request.addindex != '';
                                        addoperatorselected python:request.has_key('addoperator') and request.addoperator != ''">
    <form action="" method="get" accept-charset="utf-8" id="advancedsearch">
        <fieldset>
            <legend>Criteria</legend>
            <tal:counter tal:define="dummy python:request.set('querystringwidgetcounter', 0)"/>
            <tal:row repeat="row context/getQueryDict">
            <div class="field"
                 tal:condition="python:not request.has_key('removecriteria.%s' % repeat['row'].index)">
                <div class="queryindex">
                    <input type="hidden" name="query.i:records"
                           tal:attributes="value row/i" />
                    <span tal:content="python:indexes[row.i]['friendly_name']"/>
                </div>

                <div class="queryoperator">
                    <input type="hidden" name="query.o:records"
                           tal:attributes="value row/o" />
                    <span tal:content="python:indexes[row.i]['operators'][row.o]['friendly_name']"/>
                </div>

                <input class="querywidget queryvalue stringWidget"
                       autocomplete="off" type="text" name="query.v:records"
                       tal:attributes="value python:row['v']"
                       tal:condition="python:indexes[row.i]['operators'][row.o]['widget'] == 'StringWidget'"/>

                <dl class="querywidget queryvalue multipleSelectionWidget"
                     tal:condition="python:indexes[row.i]['operators'][row.o]['widget'] == 'MultipleSelectionWidget'">
                    <dt class="hiddenStructure"><span>Select...</span><span class="arrowDownAlternative">â–¼</span></dt>
                    <dd>
                    <tal:values repeat="index python:indexes[row.i]['values'].keys()">
                    <label>
                        <input type="checkbox" name="query.v:records:list"
                               tal:attributes="value index;
                                               checked python: row.has_key('v') and index in row.v and 'checked' or nothing"/>
                        <span tal:content="python:indexes[row.i]['values'][index]['friendly_name']"/>
                    </label>
                    </tal:values>
                    </dd>
                </dl>

                <dl class="querywidget referenceWidget"
                     tal:condition="python:indexes[row.i]['operators'][row.o]['widget'] == 'ReferenceWidget'">
                    <dt class="hiddenStructure">Select...</dt>
                    <dd>
                        <input class="queryvalue" autocomplete="off" type="text" name="query.v:records" tal:attributes="value python:row['v']" />
                    </dd>
                </dl>

                <input class="querywidget queryvalue dateWidget"
                       autocomplete="off" type="text" class="queryvalue" name="query.v:records"
                       tal:attributes="value python:row['v']"
                       tal:condition="python:indexes[row.i]['operators'][row.o]['widget'] == 'DateWidget'"/>

                <div class="querywidget queryvalue dateRangeWidget"
                     tal:condition="python:indexes[row.i]['operators'][row.o]['widget'] == 'DateRangeWidget'">
                    <input autocomplete="off" type="text" name="query.v:records:list"
                           tal:attributes="value python:row['v'][0]"/>
                    <span> and </span>
                    <input autocomplete="off" type="text" name="query.v:records:list"
                           tal:attributes="value python:row['v'][1]"/>
                </div>

                <input class="querywidget queryvalue relativePathWidget"
                       autocomplete="off" type="text" class="queryvalue" name="query.v:records"
                       tal:attributes="value python:row['v']"
                       tal:condition="python:indexes[row.i]['operators'][row.o]['widget'] == 'RelativePathWidget'"/>

                <input type="submit" class="removecriteria discreet" value="Remove criterion"
                    tal:attributes="name python:'removecriteria.%s' % request.get('querystringwidgetcounter')"/>
                <tal:counter tal:define="dummy python:request.set('querystringwidgetcounter', request.get('querystringwidgetcounter') + 1)"/>
            </div>
            </tal:row>

            <div class="field" tal:condition="python: addindexselected and addoperatorselected">

                <div class="queryindex">
                    <input type="hidden" name="query.i:records"
                           tal:attributes="value context/REQUEST/form/addindex" />
                    <span tal:content="python:indexes[request.form['addindex']]['friendly_name']"/>
                </div>

                <div class="queryoperator">
                    <input type="hidden" name="query.o:records"
                           tal:attributes="value context/REQUEST/form/addoperator" />
                    <span tal:content="python:indexes[request.form['addindex']]['operators'][request.form['addoperator']]['friendly_name']"/>
                </div>

                <input class="querywidget queryvalue stringWidget"
                       autocomplete="off" type="text" name="query.v:records" value=""
                       tal:condition="python:indexes[request.form['addindex']]['operators'][request.form['addoperator']]['widget'] == 'StringWidget'"/>

                <dl class="querywidget queryvalue multipleSelectionWidget"
                     tal:condition="python:indexes[request.form['addindex']]['operators'][request.form['addoperator']]['widget'] == 'MultipleSelectionWidget'">
                    <dt class="hiddenStructure">Select...</dt>
                    <dd>
                        <tal:values repeat="index python:indexes[request.form['addindex']]['values'].keys()">
                        <label>
                            <input type="checkbox" name="query.v:records:list" tal:attributes="value index"/>
                            <span tal:content="python:indexes[request.form['addindex']]['values'][index]['friendly_name']"/>
                        </label>
                        </tal:values>
                    </dd>
                </dl>

                <div class="querywidget referenceWidget"
                     tal:condition="python:indexes[request.form['addindex']]['operators'][request.form['addoperator']]['widget'] == 'ReferenceWidget'">
                    <dl>
                        <dt class="hiddenStructure">Select...</dt>
                        <dd><input class="queryvalue" autocomplete="off" type="text" name="query.v:records"/></dd>
                    </dl>
                </div>

                <div class="querywidget queryvalue dateWidget"
                     tal:condition="python:indexes[request.form['addindex']]['operators'][request.form['addoperator']]['widget'] == 'DateWidget'">
                     <input autocomplete="off" type="text" class="queryvalue" name="query.v:records"/>
                </div>

                <div class="querywidget queryvalue dateRangeWidget"
                     tal:condition="python:indexes[request.form['addindex']]['operators'][request.form['addoperator']]['widget'] == 'DateRangeWidget'">
                    <input autocomplete="off" type="text" name="query.v:records:list"/>
                    <span> and </span>
                    <input autocomplete="off" type="text" name="query.v:records:list"/>
                </div>

                <input class="querywidget queryvalue relativePathWidget"
                       autocomplete="off" type="text" name="query.v:records" value=""
                       tal:condition="python:indexes[request.form['addindex']]['operators'][request.form['addoperator']]['widget'] == 'RelativePathWidget'"/>

                <input type="submit" name="removecriteria" class="removecriteria discreet" value="Remove criterion">
            </div>

            <div class="field">
                <label for="addindex" class="hiddenStructure">Add criterion</label>

                <select class="addIndex" name="addindex" tal:condition="python: not(addindexselected) or addoperatorselected">
                    <option value="" selected="selected">Add criterion...</option>
                    <tal:index repeat="index python:indexes.keys()">
                    <option tal:attributes="value index;"
                            tal:content="python:indexes[index]['friendly_name']">Index</option>
                    </tal:index>
                </select>

                <div class="addIndex" tal:condition="python: addindexselected and not(addoperatorselected)">
                    <input type="hidden" name="addindex"
                           tal:attributes="value context/REQUEST/form/addindex"/>
                    <span tal:content="python:indexes[request.form['addindex']]['friendly_name']"/>
                </div>

                <select class="addOperator" name="addoperator" tal:condition="python: addindexselected and not(addoperatorselected)">
                    <option value="" selected="selected">Add criterion...</option>
                    <tal:index repeat="index python:indexes[request.form['addindex']]['operators'].keys()">
                    <option tal:attributes="value index;"
                            tal:content="python:indexes[request.form['addindex']]['operators'][index]['friendly_name']">Index</option>
                    </tal:index>
                </select>

                <input type="submit" value="Add criterion" name="form.button.addcriteria" class="context addIndexButton"/>
            </div>
        </fieldset>

        <fieldset>
            <legend>Display options</legend>

            <div class="sortingField">
                <div class="formHelp"><!-- --></div>
                <label for="sort_on">
                    Sort on
                </label>
                <select name="sort_on" id="sort_on">
                    <tal:index repeat="index python:sortable_indexes.keys()">
                        <option tal:attributes="value index; selected python:(request.has_key('sort_on') and request.sort_on == index) and 'selected' or nothing"
                                tal:content="python:sortable_indexes[index]['friendly_name']">Index</option>
                    </tal:index>
                </select>

                <input type="checkbox" name="sort_order" value="reverse" checked="checked" id="sort_order"/>
                <label for="sort_order">Reversed order</label>
            </div>

        </fieldset>

        <div class="formControls">
            <input type="submit" value="Save" name="form.button.save" class="context"/>
        </div>
    </form>
    <div id="searchresults" tal:content="structure view/previewSearchResults">
    </div>
</div>

</body>
</html>
